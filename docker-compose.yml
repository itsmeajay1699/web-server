version: '3.8'

services:
  web:
    build: .
    container_name: nodejs-app
    restart: unless-stopped
    expose:
      - "3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  mongo:
    image: mongo:7
    container_name: mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=production-db
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - certbot-webroot:/var/www/certbot:ro
      - certbot-certs:/etc/letsencrypt:ro
    depends_on:
      - web
    networks:
      - app-network

volumes:
  mongo-data:
  redis-data:
  certbot-webroot:
  certbot-certs:

networks:
  app-network:
    driver: bridge